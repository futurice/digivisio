name: digivisio

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Run integration tests        
        run: |
          docker-compose -f .\compose.yml build `
          docker-compose -f .\compose.yml run backend npm run test:ci

      - name: Build docker test image
        working-directory: backend
        run: docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/digivisio-backend:latest . --target prod

      - name: Run backend lint
        working-directory: backend
        run: docker run ${{ secrets.REGISTRY_LOGIN_SERVER }}/digivisio-backend:latest npm run lint

      # - name: Run backend tests
      #   working-directory: backend
      #   run: docker run -e CI=true ${{ secrets.REGISTRY_LOGIN_SERVER }}/digivisio-backend:latest npm run test:ci

      # move the following steps to deploy if needed
      - name: "Login to ACR"
        if: github.ref == 'refs/heads/main'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: "Push backend"
        if: github.ref == 'refs/heads/main'
        run: docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/digivisio-backend:latest

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build frontend builder image
        working-directory: frontend
        run: docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/digivisio-frontend:latest . --target builder

      - name: Run frontend lint
        working-directory: frontend
        run: docker run ${{ secrets.REGISTRY_LOGIN_SERVER }}/digivisio-frontend:latest npm run lint

      - name: Run frontend tests
        working-directory: frontend
        run: docker run -e CI=true ${{ secrets.REGISTRY_LOGIN_SERVER }}/digivisio-frontend:latest npm test

      - name: Build frontend prod image
        working-directory: frontend
        run: docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/digivisio-frontend:latest . --target prod

      # move the following steps to deploy if needed
      - name: "Login to ACR"
        if: github.ref == 'refs/heads/main'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: "Push frontend"
        if: github.ref == 'refs/heads/main'
        run: docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/digivisio-frontend:latest

  # todo use if needed...
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [test-frontend, test-backend]
  #   # if: add branch condition when done testing
  #   steps:
  #     - name: Deploy?!
  #       run: |
  #         echo 'yaaay'
