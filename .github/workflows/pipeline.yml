name: digivisio

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build docker test image
        working-directory: backend
        run: docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/digivisio-backend:latest . --target prod

      - name: Run backend tests
        working-directory: backend
        run: docker run -e CI=true ${{ secrets.REGISTRY_LOGIN_SERVER }}/digivisio-backend:latest npm run test:ci

      - name: 'Push backend'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}        
      - run: |            
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/digivisio-backend:latest




  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build docker frontend image
        working-directory: frontend
        run: docker build -t digivisio-frontend . --target builder

      - name: Run frontend tests
        working-directory: frontend
        run: docker run -e CI=true digivisio-frontend npm test

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [test, build]
  #   steps:
  #     - name: Deploy?!
  #       run: |
  #        # deploy somewhere
