services:
  backend:
    build: backend
    restart: always
    networks:
      - app-network
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - CORS_ORIGIN=http://localhost:3000
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}
      - JWT_VALID_AUDIENCE=${JWT_VALID_AUDIENCE}
      - JWT_VALID_ISSUER=${JWT_VALID_ISSUER}

  frontend:
    build: frontend
    restart: always
    networks:
      - app-network
    ports:
      - 443:443
    volumes:
      - ./fakecert:/etc/nginx/certs

  db:
    image: postgres
    hostname: postgres
    restart: always
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    expose:
      - 5432

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db
    ports:
      - 5555:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    restart: unless-stopped

networks:
  app-network:


volumes:
  db-data:
